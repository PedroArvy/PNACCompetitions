@using PNACCompetitionsDbFirst.Models.ViewModels
@using PNACCompetitionsDbFirst.Models.ViewModels.Entries;

@model CompetitionEdit

@{
  ViewBag.Title = "Edit " + @Model.Venue;
}


<style>
  body {
    display: none;
  }

  .table-responsive {
    border: none;
    outline: none;
  }

  @@media (max-width: 991px) {
    .entries-row {
      padding: 0;
    }

    .body-content {
      padding: 2px;
    }

    .btn {
      margin-bottom: 10px;
    }
  }
</style>


<div class="row">
  <div class="col-md-8">
    <h2>Edit @Model.Venue</h2>
  </div>
</div>

<script>

  $(function () {

    $("#tabs").tabs();
    $("body").show();

  });



</script>

<div id="tabs">
  <ul>
    <li><a href="#competitors-tab">Competitors</a></li>
    <li><a href="#details-tab">Details</a></li>
  </ul>

  <div id="details-tab" class="row">
    <div class="col-md-12">

      @using (Html.BeginForm("Edit", "Competitions", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
      {
        @Html.AntiForgeryToken()

        @Html.EditorFor(m => m)
      }

    </div>
  </div>

  <div id="competitors-tab">

    <div class="row">
      <div class="col-md-7">
        <div class="table-responsive">

          <table class="table table-striped">
            <thead>
              <tr>
                <th>
                  <span class="hidden-sm hidden-xs hidden-md">Delete</span>
                  <span class="hidden-lg"></span>
                </th>
                <th>Member</th>
                <th>
                  <span class="hidden-sm hidden-xs hidden-md">Captain</span>
                  <span class="hidden-lg">C</span>
                </th>
                <th>
                  <span class="hidden-sm hidden-xs hidden-md">Referee</span>
                  <span class="hidden-lg">R</span>
                </th>
              </tr>
            </thead>

            <tbody id="competitors-body">

              @foreach (CompetitorEntry entry in Model.CompetitionEntries)
              {
                @Html.Raw(Model.EntryRow(entry));
              }

            </tbody>
          </table>

          <button id="Save" class="btn btn-primary btn-sm">Save</button>
          <button id="AddCompetitor" class="btn btn-primary btn-sm">Add a competitor</button>
          <button class="btn btn-primary btn-sm">Test</button>

        </div>
      </div>
    </div>


  </div>

</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}

<script>

  $(document).ready(function () {

    $(document.body).on('click', '.Referee', function () {

      if ($(this).parent().parent().find('.TripCaptain').is(':checked')) {
        alert('The trip captain cannot be a referee');
        return false;
      }
    });


    $(document.body).on('click', '.TripCaptain', function () {
      $(this).parent().parent().find('.Referee').prop('checked', false);
    });

    $(document.body).on('click', '.DeleteCompetitor', function () {
      if(confirm('Are you sure you want to delete this entry?'))
        $(this).parents('tr').first().remove();
    });

    //$(document.body).on('blur', '.competitorName', function () {

      //console.log('blur length ' + $(this).val().length);
      //console.log('blur init val ' + $(this).attr('initial-value'));

      //if ($(this).val().length == 0)
      //  $(this).val($(this).attr('initial-value'));
    //});


    $('#AddCompetitor').click(function () {
      AddNewDirect();
    });


    $('#Save').click(function () {

      var json = '{';

      var competitors = MakeCompetitors();

      json += '"CompetitionId":"' + $('#CompetitionId').val() + '",';
      json += '"Competitors":' + competitors;

      json += '}';

      SaveEntries(json);

    });


    function SaveEntries(json)
    {

      //alert(json);
      //json = eval(json);
      //alert(2);

      //json = JSON.stringify(json);

      $.ajax({
        url: '/Competitions/SaveEntries',
        method: 'post',
        data: json,
        contentType: 'application/json; charset=utf-8',
        dataType: 'json'
      });

    }
        
 
    function MakeCompetitors()
    {
      var json, jsonRows;
      var competitors = '[';
      jsonRows = '';

      $('.competitor-row').each(function (index) {
        json = RowJson($(this));

        if (jsonRows.length > 0)
          jsonRows += ', ';

        jsonRows += json;
      });

      competitors += jsonRows;
      competitors += ']';

      return competitors;
    }


    function RowJson(row)
    {
      var json = '';
      var item = $(row).find('.competitorName');

     // alert($(item).val());
      //alert($(row).find('.TripCaptain').is(':checked'));
      //alert($(row).find('.Referee').is(':checked'));

   
      json += '{"CompetitorId":"' + $(item).attr('data-val-competitorId');
      json += '", "IsReferee":"' + $(row).find('.Referee').is(':checked').toString();
      json += '", "IsCaptain":"' + $(row).find('.TripCaptain').is(':checked').toString() + '"}';
      
      //alert(json);

      return json;
    }


    AddAutoComplete(".competitorName");
  });


  var availableTags = [
    @Html.Raw(Model.MemberNames)
  ];


  function AddAutoComplete(selector) {

    $(selector).autocomplete({
      source: availableTags,
      minLength: 0,

      select: function (event, ui) {
        $(this).attr('data-val-CompetitorId', ui.item.value);
        $(this).val(ui.item.label); // save selected id to hidden input
        AddNew();
        return false;
      }

    }).focus(function () {
      $(this).autocomplete("search", $(this).val());
      //$(this).attr('initial-value', $(this).val());
      //console.log('focus init val ' + $(this).val());
      //$(this).val('');

    });


    $('.competitorName').dblclick(function () {
      $(this).val('');
    });

  }


  function AddNew() {
    if (CompetitorsFull()) {
      AddNewDirect();
    }
  }

  function AddNewDirect() {
    $('#competitors-body').append(@Html.Raw(Model.EntryRowEmpty()));
    AddAutoComplete(".competitorName");
  }

  function CompetitorsFull() {
    var full = true;

    $(".competitorName").each(function (index) {

      if ($(this).val().length == 0 && full) {
        full = false;
      }
    });

    return full;
  }

</script>