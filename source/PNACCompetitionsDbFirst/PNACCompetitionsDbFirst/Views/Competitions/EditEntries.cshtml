@using PNACCompetitionsDbFirst.Models.ViewModels
@using PNACCompetitionsDbFirst.Models.ViewModels.Entries;

@model CompetitionEdit


<div id="competitors-tab">

  <div class="row">
    <div class="col-md-7">
      <div class="table-responsive">

        <table class="table table-striped">
          <thead>
            <tr>
              <th>
                <span class="hidden-sm hidden-xs hidden-md">Delete</span>
                <span class="hidden-lg"></span>
              </th>
              <th>Member</th>
              <th>
                <span class="hidden-sm hidden-xs hidden-md">Captain</span>
                <span class="hidden-lg">C</span>
              </th>
              <th>
                <span class="hidden-sm hidden-xs hidden-md">Referee</span>
                <span class="hidden-lg">R</span>
              </th>
            </tr>
          </thead>

          <tbody id="competitors-body">

            @foreach (CompetitorEntry entry in Model.CompetitionEntries)
            {
              @Html.Raw(Model.EntryRow(entry));
            }

          </tbody>
        </table>

        @*
          <button id="AddCompetitor" class="btn btn-primary btn-sm">Add a competitor</button>
          <button class="btn btn-primary btn-sm">Test</button>
        *@


        <div class="form-group">

            <button id="Save" class="btn btn-primary save-button">Save</button>
     
        </div>

      </div>
    </div>
  </div>


</div>

<script>

  $(document).ready(function () {

    $(document.body).on('click', '.Referee', function () {

      if ($(this).parent().parent().find('.TripCaptain').is(':checked')) {
        alert('The trip captain cannot be a referee');
        return false;
      }
    });


    $(document.body).on('click', '.TripCaptain', function () {
      $(this).parent().parent().find('.Referee').prop('checked', false);
    });


    $(document.body).on('click', '.DeleteCompetitor', function () {

      var competitionId = @Model.CompetitionId;
      var competitorId = $(this).parents('.competitor-row').first().find('.competitorName').attr('data-val-competitorid');
      var competitorName = $(this).parents('.competitor-row').first().find('.competitorName').val();

      if(DeleteEntry(competitionId, competitorId))
      {
        $(this).parents('.competitor-row').first().remove();

        var myObject = new Object();
        myObject.label = competitorName;
        myObject.value = competitorId;
        availableTags.push(myObject);

        AddAutoComplete(".competitorName");
      }
    });


    $('#AddCompetitor').click(function () {
      AddNewDirect();
    });


    $('#Save').click(function () {

      var json = '{';

      var competitors = MakeCompetitors();

      json += '"CompetitionId":"' + @Model.CompetitionId + '",';
      json += '"Competitors":' + competitors;
      json += '}';

      SaveEntries(json);

      alert('Entries saved!');
    });


    function DeleteEntry(competitionId, competitorId)
    {
      var success = false;

      var result = $.ajax({
        url: '/Competitions/DeleteEntry?competitionId=' + competitionId + '&competitorId=' + competitorId,
        method: 'post',
        contentType: 'application/json; charset=utf-8',
        dataType: 'json',
        async: false
      }).done(function (data)
      {
        if(data.success == 'true')
        {
          success = true;
        }

      }).fail(function () {
        alert('error');
      }).always(function () {
      }).success;

      return success;
    }


    function MakeCompetitors()
    {
      var json, jsonRows;
      var competitors = '[';
      jsonRows = '';

      $('.competitor-row').each(function (index) {
        json = RowJson($(this));

        if (jsonRows.length > 0)
          jsonRows += ', ';

        jsonRows += json;
      });

      competitors += jsonRows;
      competitors += ']';

      return competitors;
    }


    function RowJson(row)
    {
      var json = '';
      var item = $(row).find('.competitorName');

      json += '{"CompetitorId":"' + $(item).attr('data-val-competitorId');
      json += '", "IsReferee":"' + $(row).find('.Referee').is(':checked').toString();
      json += '", "IsCaptain":"' + $(row).find('.TripCaptain').is(':checked').toString() + '"}';

      return json;
    }


    function SaveEntries(json)
    {

      $.ajax({
        url: '/Competitions/SaveEntries',
        method: 'post',
        data: json,
        contentType: 'application/json; charset=utf-8',
        dataType: 'json'
      });

    }


    AddAutoComplete(".competitorName");
  });


  var availableTags = [
    @Html.Raw(Model.MemberNames)
  ];


  function AddAutoComplete(selector) {

    $(selector).autocomplete({
      source: availableTags,
      minLength: 0,

      select: function (event, ui) {
        $(this).attr('data-val-CompetitorId', ui.item.value);
        $(this).val(ui.item.label); // save selected id to hidden input

        //show the Delete button in case it was hidden
        $(this).parents('.competitor-row').first().find('.DeleteCompetitor').show();


        if(AddNew())
        {
          //remove the selected item
          availableTags = jQuery.grep(availableTags, function(item) {
            return item.value != ui.item.value;
          });

          AddAutoComplete(".competitorName");
        }

        return false;
      }

    }).focus(function () {
      $(this).autocomplete('search', $(this).val());
    });


    $('.competitorName').dblclick(function () {
      $(this).val('');
    });

  }


  function AddNew() {
    var success = false;

    if (CompetitorsFull()) {
      AddNewDirect();
      success = true;
    }

    return success;
  }


  function AddNewDirect() {
    $('#competitors-body').append(@Html.Raw(Model.EntryRowEmpty()));
    AddAutoComplete(".competitorName");
  }


  function CompetitorsFull() {
    var full = true;

    $(".competitorName").each(function (index) {

      if ($(this).val().length == 0 && full) {
        full = false;
      }
    });

    return full;
  }

</script>