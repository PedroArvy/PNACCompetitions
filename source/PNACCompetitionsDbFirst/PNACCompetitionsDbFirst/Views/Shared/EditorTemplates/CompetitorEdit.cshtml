@using PNACCompetitionsDbFirst.Entities.ViewModels
@model CompetitorEdit


@Html.AntiForgeryToken()

<div class="form-group">
  @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
  <div class="col-md-10">
    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.FirstName)
  </div>
</div>

<div class="form-group">
  @Html.LabelFor(m => m.NickName, new { @class = "col-md-2 control-label" })
  <div class="col-md-10">
    @Html.TextBoxFor(m => m.NickName, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.NickName)
  </div>
</div>

<div class="form-group">
  @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
  <div class="col-md-10">
    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.LastName)
  </div>
</div>


<div class="form-group">
  @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
  <div class="col-md-10">
    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.Email)
  </div>
</div>



<div class="form-group">
  @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
  <div class="col-md-10">
    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.Password)

    @if (Model.CompetitorId != 0)
    {
      <div class="help">Only enter to change password</div>
    }
  </div>
</div>

<div class="form-group">
  @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
  <div class="col-md-10">
    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.ConfirmPassword)
  </div>
</div>


<div class="form-group">
  @Html.LabelFor(m => m.Gender, new { @class = "col-md-2 control-label" })
  <div class="col-md-10">
    @Html.DropDownListFor(m => m.Gender, EnumHelper.GetSelectList(typeof(PNACCompetitionsDbFirst.Entities.Competitor.GENDER)), new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.Gender)
  </div>
</div>


@if (Model.ShowCompetitorType)
      {
  <div class="form-group">
    @Html.LabelFor(m => m.CompetitorType, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
      @Html.DropDownListFor(m => m.CompetitorType, EnumHelper.GetSelectList(typeof(PNACCompetitionsDbFirst.Entities.Competitor.COMPETITOR_TYPE)), new { @class = "form-control" })
      @Html.ValidationMessageFor(m => m.CompetitorType)
    </div>
  </div>
}


@if (Model.ShowAdmin)
{
  <div class="form-group">
    @Html.LabelFor(m => m.Admin, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
      @Html.CheckBoxFor(m => m.Admin)
    </div>
  </div>
}


@if (Model.ShowHidden)
{
  <div class="form-group">
    @Html.LabelFor(m => m.Hidden, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
      @Html.CheckBoxFor(m => m.Hidden)
    </div>
  </div>
}


<div class="form-group">
  <div class="col-md-offset-2 col-md-10">
    <input type="submit" class="btn btn-default" value="Save" />
  </div>
</div>


@Html.HiddenFor(c => c.ShowCompetitorType)
@Html.HiddenFor(c => c.ShowAdmin)
@Html.HiddenFor(c => c.ShowHidden)
