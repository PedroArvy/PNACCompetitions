@using PNACCompetitionsDbFirst.Models.ViewModels
@model CatchEdit

<link rel="stylesheet" href="/Content/pickadate/default.css" />
<link rel="stylesheet" href="/Content/pickadate/default.date.css" />
<link rel="stylesheet" href="/Content/pickadate/default.time.css" />
<script src="/scripts/pickadate/picker.js"></script>
<script src="/scripts/pickadate/picker.date.js"></script>
<script src="/scripts/pickadate/picker.time.js"></script>
<script src="/scripts/pickadate/legacy.js"></script>

<script>

  $(document).ready(function () {

    $('.CatchAndKill, .CatchAndRelease').hide();
    CatchReleaseFields();

    @if(Model.Quantity > 1)
    {
      @:$('.MoreThanOne').show();
        }

    $('.integer').focus(function () {
      if ($(this).val() == '0')
        $(this).val('');
    });

    $('.integer').focusout(function () {
      if ($(this).val().length == 0)
        $(this).val('0');
    });


    $('.CatchAndReleaseRadio').click(function () {
      CatchReleaseFields();
    });


    $('#SaveAndNew').click(function () {
      $('#GoToNew').val('true');
      return true;
    });


    $('#Quantity').change(function () {
      ShowHideLength();
    });


    var $input = $('.datepicker').pickadate({
      format: '@PNACCompetitionsDbFirst.Models.Format.DATE_FORMAT_JS',
      formatSubmit: '@PNACCompetitionsDbFirst.Models.Format.DATE_FORMAT_JS',
      closeOnSelect: false,
      closeOnClear: false,
    })

    var picker = $input.pickadate('picker');


    function CatchReleaseFields() {

      if ($('#CatchAndRelease').is(':checked'))
        ShowCatchReleaseFields();
      else if ($('#CatchAndKill').is(':checked'))
        CatchAndKillFields();

    }


    function ShowCatchReleaseFields() {

      $('.CatchAndKill').hide();
      $('.CatchAndRelease').show();
      $('#LengthDiv').show();

    }


    function CatchAndKillFields() {

      $('.CatchAndRelease').hide();
      $('.CatchAndKill').show();

      ShowHideLength();
    }


    function ShowHideLength() {
      if ($('#Quantity').val().length == 0 || $('#Quantity').val() == '1') {
        $('#LengthDiv').show();
        $('.MoreThanOne').hide();
        $('#weight-label').html('Weight (kg)');
      }
      else {
        $('#LengthDiv').hide();
        $('.MoreThanOne').show();
        $('#weight-label').html('Total Weight of ' + $('#Quantity').val() + ' fish (kg)');
        $('#longest-label').html('Longest of ' + $('#Quantity').val() + ' fish (kg) if known');
        $('#heaviest-label').html('Heaviest of ' + $('#Quantity').val() + ' fish (kg) if known');
      }
    }


  });

</script>


<div class="form-group">
  <div class="col-md-8">
    @Html.LabelFor(m => m.EntrantId, new { @class = "pnac-label" })
  </div>
  <div class="col-md-8">
    @Html.DropDownListFor(m => m.EntrantId, Model.Entrants, "Please select", new { @class = "form-control" })
    <div>@Html.ValidationMessageFor(m => m.EntrantId)</div>
  </div>
</div>


<div class="form-group">
  <div class="col-md-8">
    @Html.LabelFor(m => m.Date, new { @class = "pnac-label" })
  </div>
  <div class="col-md-8">
    @Html.TextBoxFor(m => m.Date, new { @class = "datepicker" }) 
  </div>
</div>


<div class="form-group">
  <div class="col-md-8">
    @Html.LabelFor(m => m.CatchAndRelease, new { @class = "pnac-label" })
  </div>
  <div class="col-md-8 radio-list">

    @Html.RadioButtonFor(x => x.CatchAndRelease, "Yes", new { @class = "CatchAndReleaseRadio", id = "CatchAndRelease" })Yes
    @Html.RadioButtonFor(x => x.CatchAndRelease, "No", new { @class = "CatchAndReleaseRadio", id = "CatchAndKill" })No

    <div>@Html.ValidationMessageFor(m => m.CatchAndRelease)</div>
  </div>
</div>

<div class="form-group CatchAndKill">

  <div class="col-md-8">
    @Html.CheckBoxFor(m => m.Cleaned)
    @Html.LabelFor(m => m.Cleaned, new { @class = "pnac-label" })
  </div>

</div>


<div class="form-group CatchAndKill CatchAndRelease">
  <div class="col-md-8">
    @Html.LabelFor(m => m.FishId, new { @class = "pnac-label" })
  </div>
  <div class="col-md-8">
    @Html.DropDownListFor(m => m.FishId, Model.Fish, "Please select", new { @class = "form-control" })
    <div>@Html.ValidationMessageFor(m => m.FishId)</div>
  </div>
</div>


<div class="form-group CatchAndKill">
  <div class="col-md-8">
    @Html.LabelFor(m => m.Quantity, new { @class = "pnac-label" })
  </div>
  <div class="col-md-8">
    @Html.DropDownListFor(m => m.Quantity, Model.Numbers, "Please select", new { @class = "form-control number-select" })
  </div>
</div>


<div id="LengthDiv" class="form-group CatchAndKill CatchAndRelease">
  <div class="col-md-8">
    @Html.LabelFor(m => m.Length, new { @class = "pnac-label" })
  </div>
  <div class="col-md-8">
    @Html.DropDownListFor(m => m.Length, Model.Lengths, "Please select", new { @class = "form-control number-select" })
  </div>
</div>


<div class="form-group CatchAndKill">
  <div class="col-md-8">
    @Html.LabelFor(m => m.Weight, new { @class = "pnac-label", id="weight-label" })
  </div>
  <div class="col-md-8">@Html.TextBoxFor(m => m.Weight, new { @class = "integer form-control number" })</div>
</div>


<div class="form-group MoreThanOne">
  <div class="col-md-8">
    @Html.LabelFor(m => m.Heaviest, new { @class = "pnac-label", id = "heaviest-label" })
  </div>
  <div class="col-md-8">
    @Html.TextBoxFor(m => m.Heaviest, new { @class = "integer form-control number" })
  </div>
</div>


<div class="form-group MoreThanOne">
  <div class="col-md-8">
    @Html.LabelFor(m => m.Longest, new { @class = "pnac-label", id = "longest-label" })
  </div>
  <div class="col-md-8">
    @Html.DropDownListFor(m => m.Longest, Model.Lengths, "Please select", new { @class = "form-control number-select" }) 
  </div>
</div>


@Html.HiddenFor(m => m.CompetitionId)
@Html.HiddenFor(m => m.CatchId)
@Html.HiddenFor(m => m.GoToNew)


<div class="form-group">
  <div class="col-md-8">
    <input type="submit" class="btn btn-default save-button" value="Save" />
    <input id="SaveAndNew" type="submit" class="btn btn-default save-button not-first-button" value="Save and new" />
    <a href="/Competitions/Edit/@Model.CompetitionId?tabId=@((int)PNACCompetitionsDbFirst.Models.ViewModels.CompetitionEdit.TABS.RESULTS)" class="btn btn-default save-button not-first-button">Back to all catches</a>
  </div>
</div>